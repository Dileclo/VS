const parallaxBg = document.getElementById("parallax-bg");

// –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ñ–æ–Ω–∞ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
window.addEventListener("scroll", () => {
  const offset = window.pageYOffset;
  parallaxBg.style.transform = `translateY(${offset * 0.5}px)`; // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 0.3 –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞
});

var end = new Date("08/22/2025 4:0 PM");
var _second = 1000;
var _minute = _second * 60;
var _hour = _minute * 60;
var _day = _hour * 24;
var timer;

function showRemaining() {
  var now = new Date();
  var distance = end - now;

  var days = Math.floor(distance / _day);
  var hours = Math.floor((distance % _day) / _hour);
  var minutes = Math.floor((distance % _hour) / _minute);
  var seconds = Math.floor((distance % _minute) / _second);
  document.getElementById("days").innerHTML = days;
  document.getElementById("hours").innerHTML = hours;
  document.getElementById("minutes").innerHTML = minutes;
  document.getElementById("seconds").innerHTML = seconds;
}

timer = setInterval(showRemaining, 1000);
AOS.init({
  duration: 1000,
  once: true,
});

window.addEventListener("resize", () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
});

const params = new URLSearchParams(window.location.search);

// –û–±—â–∞—è —Ñ–∞–º–∏–ª–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
const fm_name = params.get("fm_name");

// –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∞–º–∏–ª–∏–∏
const fmNameElement = document.querySelector(".fm_name");
if (fmNameElement && fm_name) {
  fmNameElement.textContent = fm_name;
}

// –ü–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ –∏ (–≤–æ–∑–º–æ–∂–Ω–æ) –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ñ–∞–º–∏–ª–∏–∏
const guests = [
  {
    name: params.get("f_name"),
    surname: params.get("f_surname"),
  },
  {
    name: params.get("s_name"),
    surname: params.get("s_surname"),
  },
  {
    name: params.get("t_name"),
    surname: params.get("t_surname"),
  },
  {
    name: params.get("fe_name"),
    surname: params.get("fe_surname"),
  },
].filter((g) => g.name); // –£–±–∏—Ä–∞–µ–º —Ç–µ—Ö, —É –∫–æ–≥–æ –Ω–µ—Ç –∏–º–µ–Ω–∏

// –û–ø—Ä–µ–¥–µ–ª–∏–º —Ç–µ–∫—Å—Ç "–†–æ–¥–Ω–∞—è –∏ –ª—é–±–∏–º–∞—è" –∏–ª–∏ "–†–æ–¥–Ω—ã–µ –∏ –ª—é–±–∏–º—ã–µ"
const prevent = document.querySelector(".prevent");
prevent.textContent =
  guests.length === 1 ? "–†–æ–¥–Ω–∞—è –∏ –õ—é–±–∏–º–∞—è" : "–†–æ–¥–Ω—ã–µ –∏ –õ—é–±–∏–º—ã–µ";

// –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º–µ–Ω–∞ —Å —Ñ–∞–º–∏–ª–∏—è–º–∏
const formattedNames = guests.map((g) => {
  if (g.surname) {
    return `${g.name} ${g.surname}`;
  } else {
    return g.name;
  }
});

// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å "–∏"
function formatNames(names) {
  if (names.length === 1) return names[0];
  if (names.length === 2) return `${names[0]} –∏ ${names[1]}`;
  const last = names.pop();
  return `${names.join(", ")} –∏ ${last}`;
}

const finalText = formatNames(formattedNames);

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
const nameElement = document.querySelector(".guest-names");
if (nameElement) {
  nameElement.textContent = finalText;
}

function formatGuestList(guests) {
  if (guests.length === 1) {
    const g = guests[0];
    return g.surname ? `${g.name} ${g.surname}` : g.name;
  }

  const surnames = guests.map((g) => g.surname).filter(Boolean);
  const uniqueSurnames = [...new Set(surnames)];

  if (uniqueSurnames.length === 1 && uniqueSurnames[0]) {
    // –í—Å–µ —Å –æ–¥–Ω–æ–π —Ñ–∞–º–∏–ª–∏–µ–π
    const names = guests.map((g) => g.name);
    return `${uniqueSurnames[0]} ${formatNames(names)}`;
  } else if (guests.length === 2 && guests.every((g) => g.surname)) {
    // –î–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–∞–º–∏–ª–∏—è–º–∏
    return `${guests[0].name} ${guests[0].surname} –∏ ${guests[1].name} ${guests[1].surname}`;
  } else {
    // –†–∞–∑–Ω—ã–µ —Ñ–∞–º–∏–ª–∏–∏
    return formatNames(
      guests.map((g) => (g.surname ? `${g.name} ${g.surname}` : g.name))
    );
  }
}

function formatNames(names) {
  if (names.length === 1) return names[0];
  if (names.length === 2) return `${names[0]} –∏ ${names[1]}`;
  const last = names.pop();
  return `${names.join(", ")} –∏ ${last}`;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
function sendDataToTelegram(formData) {
  const botToken = "7961086542:AAHloHy2cruYJomIDBFdbct7rHOJKuDWS2Q";
  const chatId = "628229833";
  const apiUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–º–µ–Ω–∞–º–∏ –∏ —Ñ–∞–º–∏–ª–∏—è–º–∏
  const guestsList = formatGuestList(formData.guests);
  const message = `
  üì© –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –≥–æ—Å—Ç—è:
  <b>–ì–æ—Å—Ç–∏:</b> ${guestsList}
  <b>–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ:</b> ${formData.prisutstvie}
  <b>–¢—Ä–∞–Ω—Å—Ñ–µ—Ä:</b> ${formData.transfer}
  `;

  const params = {
    chat_id: chatId,
    text: message,
    parse_mode: "HTML",
  };

  return fetch(apiUrl, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(params),
  }).then((response) => response.json());
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
document.querySelector("form").addEventListener("submit", (e) => {
  e.preventDefault();

  const params = new URLSearchParams(window.location.search);
  const guests = [
    {
      name: params.get("f_name"),
      surname: params.get("f_surname"),
    },
    {
      name: params.get("s_name"),
      surname: params.get("s_surname"),
    },
    {
      name: params.get("t_name"),
      surname: params.get("t_surname"),
    },
    {
      name: params.get("fe_name"),
      surname: params.get("fe_surname"),
    },
  ].filter((g) => g.name); // –£–±–∏—Ä–∞–µ–º –≥–æ—Å—Ç–µ–π –±–µ–∑ –∏–º–µ–Ω–∏

  const prisutstvie = document.querySelector(
    "input[name='prisutstvie']:checked"
  )?.value;
  const transfer = document.querySelector(
    "input[name='transfer']:checked"
  )?.value;

  const formData = {
    guests,
    prisutstvie,
    transfer,
  };

  sendDataToTelegram(formData).then((data) => {
    if (data.ok) {
      alert("–°–ø–∞—Å–∏–±–æ! –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ üíå");
    } else {
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ üò¢");
    }
  });
});
